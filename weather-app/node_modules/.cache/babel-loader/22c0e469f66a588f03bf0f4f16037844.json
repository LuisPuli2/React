{"ast":null,"code":"var _jsxFileName = \"/home/duis/Documents/React/WeatherApp/wheater-app/src/components/WeatherLocation/WeatherData/WeatherTemperature.js\";\nimport React from 'react';\nimport WeatherIcons from 'react-weathericons';\nimport PropTypes from 'prop-types';\nimport { CLOUD, CLOUDY, SUN, RAIN, SNOW, WINDY } from './../../../constants/weathers';\nimport './styles.css';\nconst icons = {\n  [SUN]: \"day-sunny\",\n  [CLOUD]: \"cloud\",\n  [CLOUDY]: \"cloudy\",\n  [RAIN]: \"rain\",\n  [SNOW]: \"snow\",\n  [WINDY]: \"windy\"\n};\n\nconst getWeatherIcon = weatherState => {\n  const icon = icons[weatherState];\n  const sizeIcon = \"4x\";\n  if (icon) return React.createElement(WeatherIcons, {\n    className: \"wicon\",\n    name: icon,\n    size: sizeIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  });else return React.createElement(WeatherIcons, {\n    className: \"wicon\",\n    name: \"day-sunny\",\n    size: sizeIcon,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  });\n};\n\nconst WeatherTemperature = ({\n  temperature,\n  weatherState\n}) => React.createElement(\"div\", {\n  className: \"weatherTemperatureCont\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 35\n  },\n  __self: this\n}, getWeatherIcon(weatherState), React.createElement(\"span\", {\n  className: \"temperature\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 39\n  },\n  __self: this\n}, temperature), React.createElement(\"span\", {\n  className: \"temperatureType\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 40\n  },\n  __self: this\n}, \"\\xB0C\"));\n\nWeatherTemperature.propTypes = {\n  temperature: PropTypes.number.isRequired,\n  weatherState: PropTypes.string.isRequired\n};\nexport default WeatherTemperature;","map":{"version":3,"sources":["/home/duis/Documents/React/WeatherApp/wheater-app/src/components/WeatherLocation/WeatherData/WeatherTemperature.js"],"names":["React","WeatherIcons","PropTypes","CLOUD","CLOUDY","SUN","RAIN","SNOW","WINDY","icons","getWeatherIcon","weatherState","icon","sizeIcon","WeatherTemperature","temperature","propTypes","number","isRequired","string"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA,SACIC,KADJ,EAEIC,MAFJ,EAGIC,GAHJ,EAIIC,IAJJ,EAKIC,IALJ,EAMIC,KANJ,QAOO,+BAPP;AASA,OAAO,cAAP;AAEA,MAAMC,KAAK,GAAG;AACV,GAACJ,GAAD,GAAO,WADG;AAEV,GAACF,KAAD,GAAS,OAFC;AAGV,GAACC,MAAD,GAAU,QAHA;AAIV,GAACE,IAAD,GAAQ,MAJE;AAKV,GAACC,IAAD,GAAQ,MALE;AAMV,GAACC,KAAD,GAAS;AANC,CAAd;;AASA,MAAME,cAAc,GAAGC,YAAY,IAAI;AACnC,QAAMC,IAAI,GAAGH,KAAK,CAACE,YAAD,CAAlB;AACA,QAAME,QAAQ,GAAG,IAAjB;AACA,MAAGD,IAAH,EACI,OAAO,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,OAAxB;AAAgC,IAAA,IAAI,EAAEA,IAAtC;AAA4C,IAAA,IAAI,EAAEC,QAAlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP,CADJ,KAGI,OAAO,oBAAC,YAAD;AAAc,IAAA,SAAS,EAAC,OAAxB;AAAgC,IAAA,IAAI,EAAE,WAAtC;AAAmD,IAAA,IAAI,EAAEA,QAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACP,CAPD;;AASA,MAAMC,kBAAkB,GAAG,CAAC;AAACC,EAAAA,WAAD;AAAaJ,EAAAA;AAAb,CAAD,KACvB;AAAK,EAAA,SAAS,EAAC,wBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAEQD,cAAc,CAACC,YAAD,CAFtB,EAII;AAAM,EAAA,SAAS,EAAG,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAiCI,WAAjC,CAJJ,EAKI;AAAM,EAAA,SAAS,EAAG,iBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALJ,CADJ;;AAUAD,kBAAkB,CAACE,SAAnB,GAA+B;AAC3BD,EAAAA,WAAW,EAAGb,SAAS,CAACe,MAAV,CAAiBC,UADJ;AAE3BP,EAAAA,YAAY,EAAET,SAAS,CAACiB,MAAV,CAAiBD;AAFJ,CAA/B;AAMA,eAAeJ,kBAAf","sourcesContent":["import React from 'react';\nimport WeatherIcons from 'react-weathericons';\nimport PropTypes from 'prop-types';\n\nimport {\n    CLOUD,\n    CLOUDY,\n    SUN,\n    RAIN,\n    SNOW,\n    WINDY,\n} from './../../../constants/weathers';\n\nimport './styles.css';\n\nconst icons = {\n    [SUN]: \"day-sunny\",\n    [CLOUD]: \"cloud\",\n    [CLOUDY]: \"cloudy\",\n    [RAIN]: \"rain\",\n    [SNOW]: \"snow\",\n    [WINDY]: \"windy\"\n};\n\nconst getWeatherIcon = weatherState => {\n    const icon = icons[weatherState];\n    const sizeIcon = \"4x\";\n    if(icon)\n        return <WeatherIcons className=\"wicon\" name={icon} size={sizeIcon}></WeatherIcons>\n    else\n        return <WeatherIcons className=\"wicon\" name={\"day-sunny\"} size={sizeIcon}></WeatherIcons>\n};\n\nconst WeatherTemperature = ({temperature,weatherState}) => (\n    <div className=\"weatherTemperatureCont\">\n        {\n            getWeatherIcon(weatherState)\n        }\n        <span className = \"temperature\">{temperature }</span>\n        <span className = \"temperatureType\">Â°C</span>\n    </div>\n);\n\nWeatherTemperature.propTypes = {\n    temperature:  PropTypes.number.isRequired,\n    weatherState: PropTypes.string.isRequired,\n};\n\n\nexport default WeatherTemperature;"]},"metadata":{},"sourceType":"module"}